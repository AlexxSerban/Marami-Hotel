{"ast":null,"code":"var _jsxFileName = \"/Users/alexserban/Desktop/Hotel Marami/src/components/ScrollReveal.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useMemo } from 'react';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(ScrollTrigger);\nconst ScrollReveal = ({\n  children,\n  scrollContainerRef,\n  enableBlur = true,\n  baseOpacity = 0.1,\n  baseRotation = 3,\n  blurStrength = 4,\n  containerClassName = \"\",\n  textClassName = \"\",\n  rotationEnd = \"bottom bottom\",\n  wordAnimationEnd = \"bottom bottom\"\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const splitText = useMemo(() => {\n    const text = typeof children === 'string' ? children : '';\n    return text.split(/(\\s+)/).map((word, index) => {\n      if (word.match(/^\\s+$/)) return word;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"inline-block word\",\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    });\n  }, [children]);\n  useEffect(() => {\n    const el = containerRef.current;\n    if (!el) return;\n    const scroller = scrollContainerRef && scrollContainerRef.current ? scrollContainerRef.current : window;\n    gsap.fromTo(el, {\n      transformOrigin: '0% 50%',\n      rotate: baseRotation\n    }, {\n      ease: 'none',\n      rotate: 0,\n      scrollTrigger: {\n        trigger: el,\n        scroller,\n        start: 'top bottom',\n        end: rotationEnd,\n        scrub: true\n      }\n    });\n    const wordElements = el.querySelectorAll('.word');\n    gsap.fromTo(wordElements, {\n      opacity: baseOpacity,\n      willChange: 'opacity'\n    }, {\n      ease: 'none',\n      opacity: 1,\n      stagger: 0.05,\n      scrollTrigger: {\n        trigger: el,\n        scroller,\n        start: 'top bottom-=20%',\n        end: wordAnimationEnd,\n        scrub: true\n      }\n    });\n    if (enableBlur) {\n      gsap.fromTo(wordElements, {\n        filter: `blur(${blurStrength}px)`\n      }, {\n        ease: 'none',\n        filter: 'blur(0px)',\n        stagger: 0.05,\n        scrollTrigger: {\n          trigger: el,\n          scroller,\n          start: 'top bottom-=20%',\n          end: wordAnimationEnd,\n          scrub: true\n        }\n      });\n    }\n    return () => {\n      ScrollTrigger.getAll().forEach(trigger => trigger.kill());\n    };\n  }, [scrollContainerRef, enableBlur, baseRotation, baseOpacity, rotationEnd, wordAnimationEnd, blurStrength]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: `my-5 ${containerClassName}`,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `text-[clamp(1.6rem,4vw,3rem)] leading-[1.5] font-semibold ${textClassName}`,\n      children: splitText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollReveal, \"hIZrZL5u/LWmVxtB2uNEyPh5EJc=\");\n_c = ScrollReveal;\nexport default ScrollReveal;\nvar _c;\n$RefreshReg$(_c, \"ScrollReveal\");","map":{"version":3,"names":["useEffect","useRef","useMemo","gsap","ScrollTrigger","jsxDEV","_jsxDEV","registerPlugin","ScrollReveal","children","scrollContainerRef","enableBlur","baseOpacity","baseRotation","blurStrength","containerClassName","textClassName","rotationEnd","wordAnimationEnd","_s","containerRef","splitText","text","split","map","word","index","match","className","fileName","_jsxFileName","lineNumber","columnNumber","el","current","scroller","window","fromTo","transformOrigin","rotate","ease","scrollTrigger","trigger","start","end","scrub","wordElements","querySelectorAll","opacity","willChange","stagger","filter","getAll","forEach","kill","ref","_c","$RefreshReg$"],"sources":["/Users/alexserban/Desktop/Hotel Marami/src/components/ScrollReveal.js"],"sourcesContent":["import { useEffect, useRef, useMemo } from 'react';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst ScrollReveal = ({\n  children,\n  scrollContainerRef,\n  enableBlur = true,\n  baseOpacity = 0.1,\n  baseRotation = 3,\n  blurStrength = 4,\n  containerClassName = \"\",\n  textClassName = \"\",\n  rotationEnd = \"bottom bottom\",\n  wordAnimationEnd = \"bottom bottom\"\n}) => {\n  const containerRef = useRef(null);\n\n  const splitText = useMemo(() => {\n    const text = typeof children === 'string' ? children : '';\n    return text.split(/(\\s+)/).map((word, index) => {\n      if (word.match(/^\\s+$/)) return word;\n      return (\n        <span className=\"inline-block word\" key={index}>\n          {word}\n        </span>\n      );\n    });\n  }, [children]);\n\n  useEffect(() => {\n    const el = containerRef.current;\n    if (!el) return;\n\n    const scroller =\n      scrollContainerRef && scrollContainerRef.current\n        ? scrollContainerRef.current\n        : window;\n\n    gsap.fromTo(\n      el,\n      { transformOrigin: '0% 50%', rotate: baseRotation },\n      {\n        ease: 'none',\n        rotate: 0,\n        scrollTrigger: {\n          trigger: el,\n          scroller,\n          start: 'top bottom',\n          end: rotationEnd,\n          scrub: true,\n        },\n      }\n    );\n\n    const wordElements = el.querySelectorAll('.word');\n\n    gsap.fromTo(\n      wordElements,\n      { opacity: baseOpacity, willChange: 'opacity' },\n      {\n        ease: 'none',\n        opacity: 1,\n        stagger: 0.05,\n        scrollTrigger: {\n          trigger: el,\n          scroller,\n          start: 'top bottom-=20%',\n          end: wordAnimationEnd,\n          scrub: true,\n        },\n      }\n    );\n\n    if (enableBlur) {\n      gsap.fromTo(\n        wordElements,\n        { filter: `blur(${blurStrength}px)` },\n        {\n          ease: 'none',\n          filter: 'blur(0px)',\n          stagger: 0.05,\n          scrollTrigger: {\n            trigger: el,\n            scroller,\n            start: 'top bottom-=20%',\n            end: wordAnimationEnd,\n            scrub: true,\n          },\n        }\n      );\n    }\n\n    return () => {\n      ScrollTrigger.getAll().forEach(trigger => trigger.kill());\n    };\n  }, [scrollContainerRef, enableBlur, baseRotation, baseOpacity, rotationEnd, wordAnimationEnd, blurStrength]);\n\n  return (\n    <div ref={containerRef} className={`my-5 ${containerClassName}`}>\n      <p className={`text-[clamp(1.6rem,4vw,3rem)] leading-[1.5] font-semibold ${textClassName}`}>{splitText}</p>\n    </div>\n  );\n};\n\nexport default ScrollReveal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}