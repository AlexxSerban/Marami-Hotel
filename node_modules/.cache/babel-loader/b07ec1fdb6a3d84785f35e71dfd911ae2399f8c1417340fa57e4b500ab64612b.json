{"ast":null,"code":"import _objectSpread from\"/Users/alexserban/Desktop/Hotel Marami/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useRef,useEffect}from\"react\";import{gsap}from\"gsap\";import{ScrollTrigger}from\"gsap/ScrollTrigger\";import{SplitText as GSAPSplitText}from\"gsap/SplitText\";import{jsx as _jsx}from\"react/jsx-runtime\";gsap.registerPlugin(ScrollTrigger,GSAPSplitText);const SplitText=_ref=>{let{text,className=\"\",delay=100,duration=0.6,ease=\"power3.out\",splitType=\"chars\",from={opacity:0,y:40},to={opacity:1,y:0},threshold=0.1,rootMargin=\"-100px\",textAlign=\"center\",onLetterAnimationComplete}=_ref;const ref=useRef(null);const animationCompletedRef=useRef(false);useEffect(()=>{const el=ref.current;if(!el||animationCompletedRef.current)return;const absoluteLines=splitType===\"lines\";if(absoluteLines)el.style.position=\"relative\";const splitter=new GSAPSplitText(el,{type:splitType,absolute:absoluteLines,linesClass:\"split-line\"});let targets;switch(splitType){case\"lines\":targets=splitter.lines;break;case\"words\":targets=splitter.words;break;case\"words, chars\":targets=[...splitter.words,...splitter.chars];break;default:targets=splitter.chars;}targets.forEach(t=>{t.style.willChange=\"transform, opacity\";});const startPct=(1-threshold)*100;const m=/^(-?\\d+)px$/.exec(rootMargin);const raw=m?parseInt(m[1],10):0;const sign=raw<0?\"-=\".concat(Math.abs(raw),\"px\"):\"+=\".concat(raw,\"px\");const start=\"top \".concat(startPct,\"%\").concat(sign);const tl=gsap.timeline({scrollTrigger:{trigger:el,start,toggleActions:\"play none none none\",once:true},smoothChildTiming:true,onComplete:()=>{animationCompletedRef.current=true;gsap.set(targets,_objectSpread(_objectSpread({},to),{},{clearProps:\"willChange\",immediateRender:true}));onLetterAnimationComplete===null||onLetterAnimationComplete===void 0?void 0:onLetterAnimationComplete();}});tl.set(targets,_objectSpread(_objectSpread({},from),{},{immediateRender:false,force3D:true}));tl.to(targets,_objectSpread(_objectSpread({},to),{},{duration,ease,stagger:delay/1000,force3D:true}));return()=>{tl.kill();ScrollTrigger.getAll().forEach(t=>t.kill());gsap.killTweensOf(targets);splitter.revert();};},[text,delay,duration,ease,splitType,from,to,threshold,rootMargin,onLetterAnimationComplete,ref]);return/*#__PURE__*/_jsx(\"p\",{ref:ref,className:\"split-parent overflow-hidden inline-block whitespace-normal \".concat(className),style:{textAlign,wordWrap:\"break-word\"},children:text});};export default SplitText;","map":{"version":3,"names":["useRef","useEffect","gsap","ScrollTrigger","SplitText","GSAPSplitText","jsx","_jsx","registerPlugin","_ref","text","className","delay","duration","ease","splitType","from","opacity","y","to","threshold","rootMargin","textAlign","onLetterAnimationComplete","ref","animationCompletedRef","el","current","absoluteLines","style","position","splitter","type","absolute","linesClass","targets","lines","words","chars","forEach","t","willChange","startPct","m","exec","raw","parseInt","sign","concat","Math","abs","start","tl","timeline","scrollTrigger","trigger","toggleActions","once","smoothChildTiming","onComplete","set","_objectSpread","clearProps","immediateRender","force3D","stagger","kill","getAll","killTweensOf","revert","wordWrap","children"],"sources":["/Users/alexserban/Desktop/Hotel Marami/src/components/SplitText.js"],"sourcesContent":["import { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { SplitText as GSAPSplitText } from \"gsap/SplitText\";\n\ngsap.registerPlugin(ScrollTrigger, GSAPSplitText);\n\nconst SplitText = ({\n  text,\n  className = \"\",\n  delay = 100,\n  duration = 0.6,\n  ease = \"power3.out\",\n  splitType = \"chars\",\n  from = { opacity: 0, y: 40 },\n  to = { opacity: 1, y: 0 },\n  threshold = 0.1,\n  rootMargin = \"-100px\",\n  textAlign = \"center\",\n  onLetterAnimationComplete,\n}) => {\n  const ref = useRef(null);\n  const animationCompletedRef = useRef(false);\n\n  useEffect(() => {\n    const el = ref.current;\n    if (!el || animationCompletedRef.current) return;\n\n    const absoluteLines = splitType === \"lines\";\n    if (absoluteLines) el.style.position = \"relative\";\n\n    const splitter = new GSAPSplitText(el, {\n      type: splitType,\n      absolute: absoluteLines,\n      linesClass: \"split-line\",\n    });\n\n    let targets;\n    switch (splitType) {\n      case \"lines\":\n        targets = splitter.lines;\n        break;\n      case \"words\":\n        targets = splitter.words;\n        break;\n      case \"words, chars\":\n        targets = [...splitter.words, ...splitter.chars];\n        break;\n      default:\n        targets = splitter.chars;\n    }\n\n    targets.forEach((t) => {\n      t.style.willChange = \"transform, opacity\";\n    });\n\n    const startPct = (1 - threshold) * 100;\n    const m = /^(-?\\d+)px$/.exec(rootMargin);\n    const raw = m ? parseInt(m[1], 10) : 0;\n    const sign = raw < 0 ? `-=${Math.abs(raw)}px` : `+=${raw}px`;\n    const start = `top ${startPct}%${sign}`;\n\n    const tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: el,\n        start,\n        toggleActions: \"play none none none\",\n        once: true,\n      },\n      smoothChildTiming: true,\n      onComplete: () => {\n        animationCompletedRef.current = true;\n        gsap.set(targets, {\n          ...to,\n          clearProps: \"willChange\",\n          immediateRender: true,\n        });\n        onLetterAnimationComplete?.();\n      },\n    });\n\n    tl.set(targets, { ...from, immediateRender: false, force3D: true });\n    tl.to(targets, {\n      ...to,\n      duration,\n      ease,\n      stagger: delay / 1000,\n      force3D: true,\n    });\n\n    return () => {\n      tl.kill();\n      ScrollTrigger.getAll().forEach((t) => t.kill());\n      gsap.killTweensOf(targets);\n      splitter.revert();\n    };\n  }, [\n    text,\n    delay,\n    duration,\n    ease,\n    splitType,\n    from,\n    to,\n    threshold,\n    rootMargin,\n    onLetterAnimationComplete,\n    ref,\n  ]);\n\n  return (\n    <p\n      ref={ref}\n      className={`split-parent overflow-hidden inline-block whitespace-normal ${className}`}\n      style={{\n        textAlign,\n        wordWrap: \"break-word\",\n      }}\n    >\n      {text}\n    </p>\n  );\n};\n\nexport default SplitText; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}